AIRLANES:
{
        "_id" : ObjectId("5a63010038a85e76d83d9731"),
        "passengers" : 0,
        "carrier" : "Korean Air Lines Co. Ltd.",
        "originCity" : "Anchorage, AK",
        "originState" : "Alaska",
        "originCountry" : "United States",
        "destCity" : "Seoul, South Korea",
        "destState" : "",
        "destCountry" : "South Korea",
        "class" : "G"
}

1)
Query:
db.airlines.aggregate([
{
    $group: {
        _id: "$class",
        total: {$sum: 1}
    }

},
{
    $project: {
        _id: 0,
        class: "$_id",
        total: "$total"
    }
}
])

Result:
{ "class" : "F", "total" : 140343 }
{ "class" : "L", "total" : 23123 }
{ "class" : "P", "total" : 5683 }
{ "class" : "G", "total" : 17499 }

-----------------------------------------------------------------

2)
Query:
db.airlines.aggregate([
    {
        "$match": {
            destCountry: {$ne: "United States"}
        }
    },
    {
        $group: {
        	_id: "$destCity",
        	avgPassengers: {$avg: "$passengers"}
        }
    },
    {        
        $sort: {
            avgPassengers: -1 
        }
    },
    {
        $limit: 3
    },
    {
        $project: {
            _id: 0,
            city: "$_id",
            avgPassengers: 1
        }
    }
])

Result:
{ "avgPassengers" : 8052.380952380952, "city" : "Abu Dhabi, United Arab Emirates" }
{ "avgPassengers" : 7176.596638655462, "city" : "Dubai, United Arab Emirates" }
{ "avgPassengers" : 7103.333333333333, "city" : "Guangzhou, China" }

-----------------------------------------------------------------

3)
Query:
db.airlines.aggregate([
    {
        "$match": {
            destCountry: {$eq: "Latvia"}
        }
    },
    {
        $group: {
            _id: "$destCountry",
            carriers: {$addToSet: "$carrier"}
        }
    }
])

!Note: You can use $push instead of $addToSet in case of not unique carriers.

Result:
{ "_id" : "Latvia", "carriers" : [ "Uzbekistan Airways", "Blue Jet SP Z o o", "JetClub AG" ] }

-----------------------------------------------------------------

4)
Query:
db.airlines.aggregate([
    {
        "$match": {
            originCountry: {$eq: "United States"},
            destCountry: {$in: ["Greece", "Italy", "Spain"]}
        }
    },
    {
        $group: {
            _id: "$carrier",
            total: {$sum: "$passengers"}
        }
    },
    {
        $sort: {
            total: -1
        }
    },
    {
        $limit: 10
    },
    {
        $skip: 3
    }
])
Result:
{ "_id" : "Compagnia Aerea Italiana", "total" : 280256 }
{ "_id" : "United Air Lines Inc.", "total" : 229936 }
{ "_id" : "Emirates", "total" : 100903 }
{ "_id" : "Air Europa", "total" : 94968 }
{ "_id" : "Meridiana S.p.A", "total" : 20308 }
{ "_id" : "Norwegian Air Shuttle ASA", "total" : 13344 }
{ "_id" : "VistaJet Limited", "total" : 183 }

-----------------------------------------------------------------

5)
Query:
db.airlines.aggregate([
    {
        "$match": {
            originCountry: {$eq: "United States"}
        }
    },
    {
        $group: {
            _id:  {
                originState: "$originState",
                originCity: "$originCity"
            },
            passengers: {$sum: "$passengers"}
        }
    },
    {
        $group: {
            _id: "$_id.originState",
            cities: {
                $push: {
                    "city": "$_id.originCity",
                    "passengers": "$passengers"
                }
            },
            maxPassengers: {$max: "$passengers"}
        }
    },
    {
        $project: {
            city: {
                $filter: {
                    input: "$cities",
                    as: "city",
                    cond: {
                        "$eq": ["$$city.passengers", "$maxPassengers"]
                    }
                }
            }
        }
    },
    {
        $sort: {
            _id: 1
        }
    },
    {
        $unwind: "$city"
    },
    {
        $project: {
            _id: 0,
            totalPassengers: "$city.passengers",
            location: {
                state: "$_id",
                city: "$city.city"
            }
        }
    },
    {
        $limit: 5
    }
])
Result:
{ "totalPassengers" : 760120, "location" : { "state" : "Alabama", "city" : "Birmingham, AL" } }
{ "totalPassengers" : 1472404, "location" : { "state" : "Alaska", "city" : "Anchorage, AK" } }
{ "totalPassengers" : 13152753, "location" : { "state" : "Arizona", "city" : "Phoenix, AZ" } }
{ "totalPassengers" : 571452, "location" : { "state" : "Arkansas", "city" : "Little Rock, AR" } }
{ "totalPassengers" : 23701556, "location" : { "state" : "California", "city" : "Los Angeles, CA" } }
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------





ENRON:

Their solution:
----
Query:
db.enron.aggregate([
        {
                $project: {
                        from: "$headers.From",
                        to:"$headers.To"
                }
        },
        {
                $unwind: "$to"
        },
        {
                $group: {
                        _id: "$_id",
                        from: {$first: "$from"},
                        to: {$addToSet: "$to"}
                }
        },
        {
                $unwind: "$to"
        },
        {
                $group: {
                        _id: {
                                from: "$from",
                                to: "$to"
                        },
                        count: {$sum: 1}
                }
        },
        {
                $sort: {count: -1}
        },
        {
                $limit: 1
        }
])

Result:
{ "_id" : { "from" : "susan.mara@enron.com", "to" : "jeff.dasovich@enron.com" }, "count" : 750 }
-----------------------------------------------------------------
My solution:
----
Query:
db.enron.aggregate([
        {
                $project: {
                        from: "$headers.From",
                        to:"$headers.To"
                }
        },
        {
                $unwind: "$to"
        },
        {
                $group: {
                        _id: "$_id",
                        from: {$first: "$from"},
                        to: {$addToSet: "$to"}
                }
        },
        {
                $unwind: "$to"
        },
        {
                $project: {
                        pairs: {
                                $cond: {
                                        if: {$gte: ["$from", "$to"]},
                                        then: ["$to", "$from"],
                                        else: ["$from", "$to"]
                                }
                        }
                }
        },
        {
                $group: {
                        _id: "$pairs",
                        count: {$sum: 1}
                }
        },
        {
                $sort: {count: -1}
        },
        {
                $limit: 1
        }
])

Result:
{ "_id" : [ "james.steffes@enron.com", "susan.mara@enron.com" ], "count" : 900 }

















